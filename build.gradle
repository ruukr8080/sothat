plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.github.node-gradle.node' version '5.0.0'
}

group = 'com.ex'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
repositories {
    mavenCentral()
}

dependencies {
	// basic
    implementation 'org.springframework.boot:spring-boot-starter-security'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-logging'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	// Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
	// Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
	// Thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
	// properties
    implementation 'io.github.cdimascio:java-dotenv:5.2.2'
	// DB
    runtimeOnly 'org.postgresql:postgresql'
    // jwt
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}
//node {
//    version = '20.16.0'  //집컴 20.17
//    download = false     // 이미 설치되어 있으니까 다운로드 안 함
//    workDir = file("${project.buildDir}/nodejs")
//    npmWorkDir = file("${project.buildDir}/npm")
//}
//task buildFrontend(type: NpmTask) {
//    workingDir = file('src/main/frontend')
//    args = ['run', 'build']
//    inputs.files(fileTree('src/main/frontend'))
//    outputs.dir('src/main/resources/static/css')
//
//    // 프론트 인스톨 확인
//    logging.captureStandardOutput LogLevel.INFO
//    logging.captureStandardError LogLevel.ERROR
//}
//processResources {
//    dependsOn buildFrontend
//}
//buildFrontend.doFirst {
//    println "Starting frontend build..."
//}
//buildFrontend.doLast {
//    println "Frontend build completed."
//    println "CSS file exists: ${file('src/main/resources/static/css/main.css').exists()}"
//}
tasks.named('test') {
    useJUnitPlatform()
}
